---
import Layout from "../layouts/Layout.astro";
import HeroImage from "../components/HeroImage.astro";
import PriceCard from "../components/PriceCard.astro";
import PriceCardCustom from "../components/PriceCardCustom.astro";
import MostRequested from "../components/MostRequested.astro";
import LocationMap from "../components/LocationMap.astro";
import FormsToDownload from "../components/FormsToDownload.astro";
import ReadyToBook from "../components/ReadyToBook.astro";
import { sanity } from "../lib/sanityClient";

// Fetch the packages page data from Sanity
let packagesPageData = null;

try {
  packagesPageData = await sanity.fetch(
    `*[_type == "packagesPage"][0]{
      title,
      subTitle,
      "mainImageUrl": mainImage.asset->url,
      packgageSectionTitle,
      "packagesFeatured": packagesFeatured[]->{
        packageName,
        price,
        dives
      },
      customPackgageTitle,
      "customPackages": customPackages[]->{
        packageName,
        price,
        details,
        dives,
        detailsBold,
      },
      additionalBlogCTA{
        title,
        description,
        ctaText,
        ctaLink,
        imageAlt,
        "imageUrl": additionalBlogCTA.asset->url
      }
    }`
  );
} catch (error) {
  console.error("Sanity Fetch Error:", error);
}

// Ensure there is fallback data if nothing was fetched
packagesPageData = packagesPageData ?? {};

const heroTitle = packagesPageData.title ?? "Choose your package and let’s dive!";
const heroSubtitle =
  packagesPageData.subTitle ??
  "Explore vibrant reefs, ancient wrecks, and marine marvels with our expert guides, we are here to make your experience unforgettable.";
const heroImage = packagesPageData.mainImageUrl ?? "/packageHero.jpg";

// For the featured packages section, if your query returns only one object (because it’s a reference)
// you might need to adjust this if you expect multiple packages.
const featuredPackages = packagesPageData?.packagesFeatured?.flat() || [

  { packageName: "1 DAY", price: "$100", dives: "2 DIVE TANKS" },
  { packageName: "2 DAY", price: "$196", dives: "4 DIVE TANKS" },
  { packageName: "3 DAY", price: "$288", dives: "6 DIVE TANKS" },
  { packageName: "4 DAY", price: "$372", dives: "8 DIVE TANKS" },
  { packageName: "5 DAY", price: "$450", dives: "10 DIVE TANKS" },];

// For the custom packages, wrap it in an array for consistency (adjust if needed)
const customPackages = packagesPageData.customPackages?.flat() || [];

const customPackageTitle = packagesPageData.customPackgageTitle ?? "CUSTOM PACKAGE";
console.log(customPackages)
---

<Layout title="Hammer Head Cozumel | Dive Shop">
  <!-- Hero Section -->
  <HeroImage
    title={heroTitle}
    subtitle={heroSubtitle}
    image={heroImage}
    alt="Hammer head dive shop hero section image"
  />

  <!-- Featured Packages Section -->
  <div class="package-per-day">
    <div class="wrapper">
      <h2 class="title">{packagesPageData.packgageSectionTitle ?? "PACKAGE PER DAY"}</h2>
      <div class="content">
        {featuredPackages.map((pkg) => (
          <PriceCard 
            packageName={pkg.packageName} 
            price={pkg.price} 
            dives={pkg.dives} 
          />
        ))}
      </div>
    </div>
  </div>

  <!-- Custom Packages Section -->
  <div class="other-p">
    <div class="wrapper">
      <h2 class="title">{customPackageTitle}</h2>
      <div class="content">
        {customPackages.map((pkg) => (
          <PriceCardCustom 
            packageName={pkg.packageName} 
            price={pkg.price} 
            details={pkg.details}
            detailsBold={pkg.detailsBold}
            dives={pkg.dives}
          />
        ))}
      </div>
    </div>
  </div>

  <!-- Other Components -->
  <MostRequested title={packagesPageData.additionalBlogCTA.title} image={packagesPageData.additionalBlogCTA.imageUrl} content={packagesPageData.additionalBlogCTA.description} alt={packagesPageData.additionalBlogCTA  .imageAlt} />
  <LocationMap />
  <FormsToDownload />
  <ReadyToBook />

  <style>
    .package-per-day {
      color: white;
      padding: 3rem 2rem;
      background-size: cover;
      background-blend-mode: multiply;
      background: url(/packageBg1.jpg);
    }
    .wrapper {
      text-align: center;
      padding: 3rem 1rem;
    }
    .wrapper h2 {
      color: white;
      font-weight: bolder;
      font-size: xx-large;
    }
    .content {
      gap: 2rem;
      display: flex;
      flex-wrap: wrap;
      padding-top: 3rem;
      align-items: center;
      flex-direction: row;
      justify-content: center;
    }
    @media (max-width: 720px) {
      .content {
        flex-direction: column;
      }
    }
    @media (max-width: 1000px) {
      .wrapper {
        padding: 3rem 1rem;
      }
    }
  </style>
</Layout>